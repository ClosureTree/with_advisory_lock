name: CI

on:
  pull_request:
    branches:
      - master

concurrency:
  group: ci-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  minitest:
    runs-on: ubuntu-latest
    name: CI Ruby ${{ matrix.ruby }} / Rails ${{ matrix.rails }}
    services:
      postgres:
        image: 'postgres:17-alpine'
        ports:
         - '5432'
        env:
          POSTGRES_USER: with_advisory
          POSTGRES_PASSWORD: with_advisory_pass
          POSTGRES_DB: with_advisory_lock_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      mysql:
        image: mysql/mysql-server
        ports:
          - 3306
        env:
          MYSQL_USER: with_advisory
          MYSQL_PASSWORD: with_advisory_pass
          MYSQL_DATABASE: with_advisory_lock_test
          MYSQL_ROOT_HOST: '%'
      mariadb:
        image: mariadb:12
        ports:
          - 3306
        env:
          MARIADB_USER: with_advisory
          MARIADB_PASSWORD: with_advisory_pass
          MARIADB_DATABASE: with_advisory_lock_trilogy_test
          MARIADB_ROOT_PASSWORD: root_pass
          MARIADB_MYSQL_LOCALHOST_USER: 1
          MARIADB_MYSQL_LOCALHOST_GRANTS: USAGE
        options: >-
          --health-cmd="healthcheck.sh --su-mysql --connect --innodb_initialized"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10
    strategy:
      fail-fast: false
      matrix:
        ruby:
          - '3.3'
          - '3.4'
          - 'truffleruby'
        rails:
          - 7.2
          - "8.0"
    env:
      ACTIVERECORD_VERSION: ${{ matrix.rails }}
      RAILS_ENV: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true
          rubygems: latest

      - name: Wait for MariaDB
        run: |
          until nc -z 127.0.0.1 ${{ job.services.mariadb.ports[3306] }}; do
            echo "Waiting for MariaDB to be ready..."
            sleep 1
          done
          echo "MariaDB is ready"

      - name: Setup test databases
        env:
          DATABASE_URL_PG: postgres://with_advisory:with_advisory_pass@localhost:${{ job.services.postgres.ports[5432] }}/with_advisory_lock_test
          DATABASE_URL_MYSQL: mysql2://with_advisory:with_advisory_pass@127.0.0.1:${{ job.services.mysql.ports[3306] }}/with_advisory_lock_test
          DATABASE_URL_TRILOGY: trilogy://with_advisory:with_advisory_pass@127.0.0.1:${{ job.services.mariadb.ports[3306] }}/with_advisory_lock_trilogy_test
        run: |
          cd test/dummy
          bundle exec rake db:test:prepare

      - name: Test
        env:
          DATABASE_URL_PG: postgres://with_advisory:with_advisory_pass@localhost:${{ job.services.postgres.ports[5432] }}/with_advisory_lock_test
          DATABASE_URL_MYSQL: mysql2://with_advisory:with_advisory_pass@127.0.0.1:${{ job.services.mysql.ports[3306] }}/with_advisory_lock_test
          DATABASE_URL_TRILOGY: trilogy://with_advisory:with_advisory_pass@127.0.0.1:${{ job.services.mariadb.ports[3306] }}/with_advisory_lock_trilogy_test
          WITH_ADVISORY_LOCK_PREFIX: ${{ github.run_id }}
        run: bin/rails test
